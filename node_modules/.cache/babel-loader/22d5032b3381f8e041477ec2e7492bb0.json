{"ast":null,"code":"import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\nexport class Photo {\n  constructor(urlSmall, urlBig, caption) {\n    this.urlSmall = void 0;\n    this.urlBig = void 0;\n    this.caption = void 0;\n    this.urlSmall = urlSmall;\n    this.urlBig = urlBig;\n    this.caption = caption;\n  }\n\n}\n\nPhoto.deserialize = json => {\n  const urlSmall = JsonDeserializationHelper.assertField(json, 'urlSmall', FieldType.STRING);\n  const urlBig = JsonDeserializationHelper.assertField(json, 'urlBig', FieldType.STRING);\n  const caption = JsonDeserializationHelper.assertField(json, 'caption', FieldType.STRING);\n  return new Photo(urlSmall, urlBig, caption);\n};","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/paros/Code/src/model/Photo.ts"],"names":["FieldType","JsonDeserializationHelper","Photo","constructor","urlSmall","urlBig","caption","deserialize","json","assertField","STRING"],"mappings":"AAAA,SAASA,SAAT,QAA0B,6BAA1B;AACA,OAAOC,yBAAP,MAAsC,6CAAtC;AAEA,OAAO,MAAMC,KAAN,CAAY;AAKfC,EAAAA,WAAW,CAACC,QAAD,EAAoBC,MAApB,EAAqCC,OAArC,EAAuD;AAAA,SAJzDF,QAIyD;AAAA,SAHzDC,MAGyD;AAAA,SAFzDC,OAEyD;AAC9D,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AATc;;AAANJ,K,CAWFK,W,GAAeC,IAAD,IAAgB;AACjC,QAAMJ,QAAQ,GAAGH,yBAAyB,CAACQ,WAA1B,CAAsCD,IAAtC,EAA4C,UAA5C,EAAwDR,SAAS,CAACU,MAAlE,CAAjB;AACA,QAAML,MAAM,GAAGJ,yBAAyB,CAACQ,WAA1B,CAAsCD,IAAtC,EAA4C,QAA5C,EAAsDR,SAAS,CAACU,MAAhE,CAAf;AACA,QAAMJ,OAAO,GAAGL,yBAAyB,CAACQ,WAA1B,CAAsCD,IAAtC,EAA4C,SAA5C,EAAuDR,SAAS,CAACU,MAAjE,CAAhB;AAEA,SAAO,IAAIR,KAAJ,CAAUE,QAAV,EAAoBC,MAApB,EAA4BC,OAA5B,CAAP;AACH,C","sourcesContent":["import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\n\nexport class Photo {\n    readonly urlSmall : string;\n    readonly urlBig : string;\n    readonly caption : string;\n\n    constructor(urlSmall : string, urlBig : string, caption : string) {\n        this.urlSmall = urlSmall;\n        this.urlBig = urlBig;\n        this.caption = caption;\n    }\n\n    static deserialize = (json : any) => {\n        const urlSmall = JsonDeserializationHelper.assertField(json, 'urlSmall', FieldType.STRING);\n        const urlBig = JsonDeserializationHelper.assertField(json, 'urlBig', FieldType.STRING);\n        const caption = JsonDeserializationHelper.assertField(json, 'caption', FieldType.STRING);\n\n        return new Photo(urlSmall, urlBig, caption);\n    }\n}"]},"metadata":{},"sourceType":"module"}