{"ast":null,"code":"import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\nexport default class Flight {\n  constructor(day, time, airline, flightNumber) {\n    this.day = void 0;\n    this.time = void 0;\n    this.airline = void 0;\n    this.flightNumber = void 0;\n\n    this.getFormattedDay = () => {\n      return this.day.toLocaleDateString();\n    };\n\n    this.day = day;\n    this.time = time;\n    this.airline = airline;\n    this.flightNumber = flightNumber;\n  }\n\n}\n\nFlight.deserialize = json => {\n  const day = JsonDeserializationHelper.assertField(json, 'day', FieldType.DATE);\n  const time = JsonDeserializationHelper.assertField(json, 'time', FieldType.STRING);\n  const airline = JsonDeserializationHelper.assertField(json, 'airline', FieldType.STRING);\n  const flightNumber = JsonDeserializationHelper.assertField(json, 'flightNumber', FieldType.STRING);\n  return new Flight(day, time, airline, flightNumber);\n};","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/paros/Code/src/model/Flight.ts"],"names":["FieldType","JsonDeserializationHelper","Flight","constructor","day","time","airline","flightNumber","getFormattedDay","toLocaleDateString","deserialize","json","assertField","DATE","STRING"],"mappings":"AAAA,SAASA,SAAT,QAA0B,6BAA1B;AACA,OAAOC,yBAAP,MAAsC,6CAAtC;AAEA,eAAe,MAAMC,MAAN,CAAa;AAMxBC,EAAAA,WAAW,CAACC,GAAD,EAAaC,IAAb,EAA4BC,OAA5B,EAA8CC,YAA9C,EAAqE;AAAA,SALvEH,GAKuE;AAAA,SAJvEC,IAIuE;AAAA,SAHvEC,OAGuE;AAAA,SAFvEC,YAEuE;;AAAA,SAgBhFC,eAhBgF,GAgB9D,MAAM;AACpB,aAAO,KAAKJ,GAAL,CAASK,kBAAT,EAAP;AACH,KAlB+E;;AAC5E,SAAKL,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACH;;AAXuB;;AAAPL,M,CAaVQ,W,GAAeC,IAAD,IAAgB;AACjC,QAAMP,GAAG,GAAGH,yBAAyB,CAACW,WAA1B,CAAsCD,IAAtC,EAA4C,KAA5C,EAAmDX,SAAS,CAACa,IAA7D,CAAZ;AACA,QAAMR,IAAI,GAAGJ,yBAAyB,CAACW,WAA1B,CAAsCD,IAAtC,EAA4C,MAA5C,EAAoDX,SAAS,CAACc,MAA9D,CAAb;AACA,QAAMR,OAAO,GAAGL,yBAAyB,CAACW,WAA1B,CAAsCD,IAAtC,EAA4C,SAA5C,EAAuDX,SAAS,CAACc,MAAjE,CAAhB;AACA,QAAMP,YAAY,GAAGN,yBAAyB,CAACW,WAA1B,CAAsCD,IAAtC,EAA4C,cAA5C,EAA4DX,SAAS,CAACc,MAAtE,CAArB;AAEA,SAAO,IAAIZ,MAAJ,CAAWE,GAAX,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,YAA/B,CAAP;AACH,C","sourcesContent":["import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\n\nexport default class Flight {\n    readonly day : Date;\n    readonly time : string;\n    readonly airline : string;\n    readonly flightNumber : string;\n\n    constructor(day : Date, time : string, airline : string, flightNumber : string) {\n        this.day = day;\n        this.time = time;\n        this.airline = airline;\n        this.flightNumber = flightNumber;\n    }\n\n    static deserialize = (json : any) => {\n        const day = JsonDeserializationHelper.assertField(json, 'day', FieldType.DATE);\n        const time = JsonDeserializationHelper.assertField(json, 'time', FieldType.STRING);\n        const airline = JsonDeserializationHelper.assertField(json, 'airline', FieldType.STRING);\n        const flightNumber = JsonDeserializationHelper.assertField(json, 'flightNumber', FieldType.STRING);\n\n        return new Flight(day, time, airline, flightNumber);\n    }\n\n    getFormattedDay = () => {\n        return this.day.toLocaleDateString();\n    }\n}"]},"metadata":{},"sourceType":"module"}