{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nexport const useMediaQuery = query => {\n  _s();\n\n  const [matches, setMatches] = useState(false);\n  const updateMatches = useCallback(() => {\n    setMatches(window.matchMedia(query).matches);\n  }, []);\n  useEffect(() => {\n    const mediaMatcher = window.matchMedia(query);\n    setMatches(mediaMatcher.matches);\n    mediaMatcher.addListener(updateMatches);\n    return () => mediaMatcher.removeListener(updateMatches);\n  }, [query]);\n  return matches;\n};\n\n_s(useMediaQuery, \"p0bTZR3gzQ42ILidWCGTUj3OohI=\");\n\nexport const useIsMobile = () => {\n  _s2();\n\n  return useMediaQuery(\"screen and (max-width: 600px)\");\n};\n\n_s2(useIsMobile, \"AGUsWXV/IGWEYGrGyhqugaEb9zc=\", false, function () {\n  return [useMediaQuery];\n});","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/paros/Code/src/hooks/UseMediaQuery.ts"],"names":["useState","useEffect","useCallback","useMediaQuery","query","matches","setMatches","updateMatches","window","matchMedia","mediaMatcher","addListener","removeListener","useIsMobile"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAoB;AAAA;;AAC7C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMO,aAAa,GAAGL,WAAW,CAAC,MAAM;AACpCI,IAAAA,UAAU,CAACE,MAAM,CAACC,UAAP,CAAkBL,KAAlB,EAAyBC,OAA1B,CAAV;AACH,GAFgC,EAE9B,EAF8B,CAAjC;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,YAAY,GAAGF,MAAM,CAACC,UAAP,CAAkBL,KAAlB,CAArB;AACAE,IAAAA,UAAU,CAACI,YAAY,CAACL,OAAd,CAAV;AACAK,IAAAA,YAAY,CAACC,WAAb,CAAyBJ,aAAzB;AACA,WAAO,MAAMG,YAAY,CAACE,cAAb,CAA4BL,aAA5B,CAAb;AACH,GALQ,EAKN,CAACH,KAAD,CALM,CAAT;AAMA,SAAOC,OAAP;AACH,CAZM;;GAAMF,a;;AAcb,OAAO,MAAMU,WAAW,GAAG,MAAM;AAAA;;AAC7B,SAAOV,aAAa,CAAC,+BAAD,CAApB;AACH,CAFM;;IAAMU,W;UACFV,a","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nexport const useMediaQuery = (query : string) => {\n    const [matches, setMatches] = useState(false);\n    const updateMatches = useCallback(() => {\n        setMatches(window.matchMedia(query).matches);\n    }, []);\n    useEffect(() => {\n        const mediaMatcher = window.matchMedia(query);\n        setMatches(mediaMatcher.matches);\n        mediaMatcher.addListener(updateMatches);\n        return () => mediaMatcher.removeListener(updateMatches)\n    }, [query]);\n    return matches;\n}\n\nexport const useIsMobile = () => {\n    return useMediaQuery(\"screen and (max-width: 600px)\");\n}"]},"metadata":{},"sourceType":"module"}