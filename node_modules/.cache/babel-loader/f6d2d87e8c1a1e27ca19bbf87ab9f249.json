{"ast":null,"code":"import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\nimport { Photo } from \"./Photo\";\nimport data from '../data/photos.json';\nexport default class Location {\n  constructor(name, photos) {\n    this.photos = void 0;\n    this.name = void 0;\n    this.name = name;\n    this.photos = photos;\n  }\n\n}\n\nLocation.deserialize = json => {\n  const name = JsonDeserializationHelper.assertField(json, 'name', FieldType.STRING);\n  const photos = JsonDeserializationHelper.assertField(json, 'photos', FieldType.ARRAY(Photo.deserialize));\n  return new Location(name, photos);\n};\n\nLocation.getLocations = () => {\n  return Location.deserialize(data);\n};","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/paros/Code/src/model/Location.ts"],"names":["FieldType","JsonDeserializationHelper","Photo","data","Location","constructor","name","photos","deserialize","json","assertField","STRING","ARRAY","getLocations"],"mappings":"AAAA,SAASA,SAAT,QAA0B,6BAA1B;AACA,OAAOC,yBAAP,MAAsC,6CAAtC;AACA,SAASC,KAAT,QAA+B,SAA/B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,eAAe,MAAMC,QAAN,CAAe;AAI1BC,EAAAA,WAAW,CAACC,IAAD,EAAgBC,MAAhB,EAAkC;AAAA,SAHpCA,MAGoC;AAAA,SAFpCD,IAEoC;AACzC,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AAPyB;;AAATH,Q,CASVI,W,GAAeC,IAAD,IAAgB;AACjC,QAAMH,IAAI,GAAGL,yBAAyB,CAACS,WAA1B,CAAsCD,IAAtC,EAA4C,MAA5C,EAAoDT,SAAS,CAACW,MAA9D,CAAb;AACA,QAAMJ,MAAM,GAAGN,yBAAyB,CAACS,WAA1B,CAAsCD,IAAtC,EAA4C,QAA5C,EAAsDT,SAAS,CAACY,KAAV,CAAgBV,KAAK,CAACM,WAAtB,CAAtD,CAAf;AAEA,SAAO,IAAIJ,QAAJ,CAAaE,IAAb,EAAmBC,MAAnB,CAAP;AACH,C;;AAdgBH,Q,CAgBVS,Y,GAAe,MAAM;AACxB,SAAOT,QAAQ,CAACI,WAAT,CAAqBL,IAArB,CAAP;AACH,C","sourcesContent":["import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\nimport { Photo as Photo } from \"./Photo\";\nimport data from '../data/photos.json';\n\nexport default class Location {\n    readonly photos : Photo[];\n    readonly name : string;\n\n    constructor(name : string, photos : Photo[]) {\n        this.name = name;\n        this.photos = photos;\n    }\n\n    static deserialize = (json : any) => {\n        const name = JsonDeserializationHelper.assertField(json, 'name', FieldType.STRING);\n        const photos = JsonDeserializationHelper.assertField(json, 'photos', FieldType.ARRAY(Photo.deserialize));\n\n        return new Location(name, photos);\n    }\n\n    static getLocations = () => {\n        return Location.deserialize(data);\n    }\n}"]},"metadata":{},"sourceType":"module"}