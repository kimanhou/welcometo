{"ast":null,"code":"import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\nimport Location from './Location';\nimport data from '../data/photos.json';\nexport default class Album {\n  constructor(name, locations) {\n    this.name = void 0;\n    this.locations = void 0;\n    this.name = name;\n    this.locations = locations;\n  }\n\n}\n\nAlbum.deserialize = json => {\n  const name = JsonDeserializationHelper.assertField(json, 'name', FieldType.STRING);\n  const locations = JsonDeserializationHelper.assertField(json, 'locations', FieldType.ARRAY(Location.deserialize));\n  return new Album(name, locations);\n};\n\nAlbum.getLocations = () => {\n  return Album.deserialize(data);\n};","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/paros/Code/src/model/Locations.ts"],"names":["FieldType","JsonDeserializationHelper","Location","data","Album","constructor","name","locations","deserialize","json","assertField","STRING","ARRAY","getLocations"],"mappings":"AAAA,SAASA,SAAT,QAA0B,6BAA1B;AACA,OAAOC,yBAAP,MAAsC,6CAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEA,eAAe,MAAMC,KAAN,CAAY;AAIvBC,EAAAA,WAAW,CAACC,IAAD,EAAgBC,SAAhB,EAAwC;AAAA,SAH1CD,IAG0C;AAAA,SAF1CC,SAE0C;AAC/C,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAPsB;;AAANH,K,CASVI,W,GAAeC,IAAD,IAAgB;AACjC,QAAMH,IAAI,GAAGL,yBAAyB,CAACS,WAA1B,CAAsCD,IAAtC,EAA4C,MAA5C,EAAoDT,SAAS,CAACW,MAA9D,CAAb;AACA,QAAMJ,SAAS,GAAGN,yBAAyB,CAACS,WAA1B,CAAsCD,IAAtC,EAA4C,WAA5C,EAAyDT,SAAS,CAACY,KAAV,CAAgBV,QAAQ,CAACM,WAAzB,CAAzD,CAAlB;AAEA,SAAO,IAAIJ,KAAJ,CAAUE,IAAV,EAAgBC,SAAhB,CAAP;AACH,C;;AAdgBH,K,CAgBVS,Y,GAAe,MAAM;AACxB,SAAOT,KAAK,CAACI,WAAN,CAAkBL,IAAlB,CAAP;AACH,C","sourcesContent":["import { FieldType } from \"./deserialization/FieldType\";\nimport JsonDeserializationHelper from \"./deserialization/JsonDeserializationHelper\";\nimport Location from './Location';\nimport data from '../data/photos.json';\n\nexport default class Album {\n    readonly name : string;\n    readonly locations : Location[];\n\n    constructor(name : string, locations : Location[]) {\n        this.name = name;\n        this.locations = locations;\n    }\n\n    static deserialize = (json : any) => {\n        const name = JsonDeserializationHelper.assertField(json, 'name', FieldType.STRING);\n        const locations = JsonDeserializationHelper.assertField(json, 'locations', FieldType.ARRAY(Location.deserialize));\n\n        return new Album(name, locations);\n    }\n\n    static getLocations = () => {\n        return Album.deserialize(data);\n    }\n}"]},"metadata":{},"sourceType":"module"}