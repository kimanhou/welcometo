{"ast":null,"code":"var _jsxFileName = \"/Users/kimanhnguyen/Documents/Sites/paros/Code/src/components/Photos/Photos.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PhotoComponent from './PhotoComponent';\nimport './Photos.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Photos = props => {\n  _s();\n\n  const [imageWidths, setImageWidths] = useState(props.photos.map(t => 0));\n\n  const updateImageWidth = i => width => {\n    setImageWidths(imageWidths => {\n      const clone = [...imageWidths];\n      clone[i] = width;\n      return clone;\n    });\n  };\n\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const offset = imageWidths.slice(0, currentImageIndex).reduce((a, b) => a + b + 20, 0);\n  const [fullScreenGalleryVisibile, setFullScreenGalleryVisibile] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `photos-container`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `photos flex-row`,\n      children: props.photos.map((t, i) => /*#__PURE__*/_jsxDEV(PhotoComponent, {\n        photo: t,\n        setImageWidth: updateImageWidth(i),\n        currentImageIndex: i,\n        setCurrentImageIndex: setCurrentImageIndex,\n        setFullScreenGalleryVisible: setFullScreenGalleryVisibile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Photos, \"Z9L2w2IGKWVXiG5YdzLh4UdQa+k=\");\n\n_c = Photos;\nexport default Photos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"sources":["/Users/kimanhnguyen/Documents/Sites/paros/Code/src/components/Photos/Photos.tsx"],"names":["React","useState","PhotoComponent","Photos","props","imageWidths","setImageWidths","photos","map","t","updateImageWidth","i","width","clone","currentImageIndex","setCurrentImageIndex","offset","slice","reduce","a","b","fullScreenGalleryVisibile","setFullScreenGalleryVisibile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,eAAP;;;AAMA,MAAMC,MAA+B,GAAGC,KAAK,IAAI;AAAA;;AAC7C,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCL,QAAQ,CAAWG,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiBC,CAAC,IAAI,CAAtB,CAAX,CAAhD;;AACA,QAAMC,gBAAgB,GAAIC,CAAD,IAAiBC,KAAD,IAAoB;AACzDN,IAAAA,cAAc,CAACD,WAAW,IAAI;AAC1B,YAAMQ,KAAK,GAAG,CAAC,GAAGR,WAAJ,CAAd;AACAQ,MAAAA,KAAK,CAACF,CAAD,CAAL,GAAWC,KAAX;AACA,aAAOC,KAAP;AACH,KAJa,CAAd;AAKH,GAND;;AAQA,QAAM,CAAEC,iBAAF,EAAqBC,oBAArB,IAA8Cd,QAAQ,CAAC,CAAD,CAA5D;AAEA,QAAMe,MAAM,GAAGX,WAAW,CAACY,KAAZ,CAAkB,CAAlB,EAAqBH,iBAArB,EAAwCI,MAAxC,CAA+C,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAACC,CAAF,GAAI,EAA5D,EAAgE,CAAhE,CAAf;AAEA,QAAM,CAAEC,yBAAF,EAA6BC,4BAA7B,IAA8DrB,QAAQ,CAAC,KAAD,CAA5E;AAEA,sBACI;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA,gBACKG,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,CAACC,CAAD,EAAIE,CAAJ,kBACd,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEF,CAAvB;AAA0B,QAAA,aAAa,EAAEC,gBAAgB,CAACC,CAAD,CAAzD;AACA,QAAA,iBAAiB,EAAEA,CADnB;AACsB,QAAA,oBAAoB,EAAEI,oBAD5C;AAEA,QAAA,2BAA2B,EAAEO;AAF7B;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1BD;;GAAMnB,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Photo } from '../../model/Photo';\nimport PhotoComponent from './PhotoComponent';\nimport './Photos.scss';\n\ninterface IPhotosProps {\n    photos : Photo[];\n}\n\nconst Photos : React.FC<IPhotosProps> = props => {\n    const [ imageWidths, setImageWidths ] = useState<number[]>(props.photos.map(t => 0));\n    const updateImageWidth = (i : number) => (width : number) => {\n        setImageWidths(imageWidths => {\n            const clone = [...imageWidths];\n            clone[i] = width;\n            return clone;\n        });\n    }\n\n    const [ currentImageIndex, setCurrentImageIndex ] = useState(0);\n\n    const offset = imageWidths.slice(0, currentImageIndex).reduce((a,b) => a+b+20, 0);\n\n    const [ fullScreenGalleryVisibile, setFullScreenGalleryVisibile ] = useState(false);\n\n    return (\n        <div className={`photos-container`}>\n            <div className={`photos flex-row`}>\n                {props.photos.map((t, i) => \n                    <PhotoComponent photo={t} setImageWidth={updateImageWidth(i)} \n                    currentImageIndex={i} setCurrentImageIndex={setCurrentImageIndex}\n                    setFullScreenGalleryVisible={setFullScreenGalleryVisibile} />)}\n            </div>\n        </div>\n    );\n}\n\nexport default Photos;"]},"metadata":{},"sourceType":"module"}